//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.0

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "game")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub title: String,
    pub description: Option<String>,
    pub create_date: DateTimeUtc,
    pub create_user_id: i64,
    pub modify_date: Option<DateTimeUtc>,
    pub modify_user_id: Option<i64>,
    pub image_link: Option<String>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::game_key::Entity")]
    GameKey,
}

impl Related<super::game_key::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::GameKey.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
