//! `SeaORM` Entity, @generated by sea-orm-codegen 1.0.0-rc.5

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "key_raffle_winner")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub winner_id: i64,
    pub key_raffle_key_id: i32,
    pub create_date: DateTimeUtc,
    pub create_user_id: i64,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::key_raffle::Entity",
        from = "Column::KeyRaffleKeyId",
        to = "super::key_raffle::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    KeyRaffle,
}

impl Related<super::key_raffle::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::KeyRaffle.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
